/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.alfredointerian.personal_financies.client;

import com.alfredointerian.personal_financies.auth.Session;
import com.alfredointerian.personal_financies.database.Movement;
import java.text.DecimalFormat;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.text.AbstractDocument;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.DocumentFilter;

/**
 *
 * @author alfre
 */
public class NewMovement extends javax.swing.JFrame {
    
    Session session = Session.getInstance();
    DateChooser dateChooser = new DateChooser();


    /**
     * Creates new form NewMovement
     */
    public NewMovement() {
        initComponents();
        this.setLocationRelativeTo(null);
        
        SelectedBankingAccountLabel.setText(session.fetchBankingAccountName());
        
        DateChooserPanel.add(dateChooser);
        DateChooserPanel.revalidate();
        DateChooserPanel.repaint();
    }
    private void setAmountStatus () {        
        String amountText = AmountField.getText();
        if (!amountText.isEmpty()) {
            double amount = Double.parseDouble(amountText);
            DecimalFormat formatter = new DecimalFormat("#,###.00");
            String formattedAmount = formatter.format(amount);
        
            AmountStatus.setText("<html><span style='color:" + (AmountType.isSelected() ? "red" : "green") + ";'>(" + (AmountType.isSelected() ? "-" : "+") + formattedAmount + ")</span></html>");         
        } 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        AmountField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        DescriptionScroll = new javax.swing.JScrollPane();
        DescriptionTextArea = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        ConceptField = new javax.swing.JTextField();
        AddMovementBtn = new javax.swing.JButton();
        ReturnBtn = new javax.swing.JButton();
        SelectedBankingAccountLabel = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        DateChooserPanel = new javax.swing.JPanel();
        DefaultTimeChkBox = new javax.swing.JCheckBox();
        AmountType = new javax.swing.JCheckBox();
        jLabel6 = new javax.swing.JLabel();
        AmountStatus = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("New Movement");

        jLabel2.setText("Concept");

        AmountField.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        AmountField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel3.setText("Description");

        DescriptionTextArea.setColumns(20);
        DescriptionTextArea.setLineWrap(true);
        DescriptionTextArea.setRows(5);
        DescriptionScroll.setViewportView(DescriptionTextArea);

        jLabel4.setText("Amount");

        AddMovementBtn.setText("Add Movement");
        AddMovementBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AddMovementBtnMouseClicked(evt);
            }
        });

        ReturnBtn.setText("Cancel");
        ReturnBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ReturnBtnMouseClicked(evt);
            }
        });

        SelectedBankingAccountLabel.setText("<Selected Banking Account>");

        jLabel5.setText("Date");

        DefaultTimeChkBox.setSelected(true);
        DefaultTimeChkBox.setText("Use current time");
        DefaultTimeChkBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                DefaultTimeChkBoxItemStateChanged(evt);
            }
        });

        AmountType.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        AmountType.setSelected(true);
        AmountType.setText("Expense");
        AmountType.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                AmountTypeItemStateChanged(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 28)); // NOI18N
        jLabel6.setText("$");

        AmountStatus.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        AmountStatus.setText("<AmountStatus>");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(DescriptionScroll)
                            .addComponent(ConceptField)
                            .addComponent(DateChooserPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(AmountField))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(ReturnBtn)
                                        .addGap(89, 89, 89)
                                        .addComponent(AddMovementBtn))
                                    .addComponent(DefaultTimeChkBox, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(AmountType, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel5))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(AmountStatus))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(SelectedBankingAccountLabel))
                            .addComponent(jLabel1))))
                .addGap(29, 29, 29))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SelectedBankingAccountLabel)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ConceptField, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DescriptionScroll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(AmountStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(AmountField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AmountType)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DateChooserPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DefaultTimeChkBox)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddMovementBtn)
                    .addComponent(ReturnBtn))
                .addGap(21, 21, 21))
        );

        // <editor-fold desc="Document Listener | Amount Status" defaultstate="collapsed">
        AmountField.getDocument().addDocumentListener(new DocumentListener () {
            @Override
            public void insertUpdate(DocumentEvent e) {
                setAmountStatus();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                setAmountStatus();

                if (AmountField.getText().isBlank()) {
                    AmountStatus.setText("");
                }
            }

            @Override
            public void changedUpdate(DocumentEvent e) {}
        });
        // </editor-fold>

        // <editor-fold desc="Document Filter | Allow only numbers" defaultstate="collapsed">
        ((AbstractDocument) AmountField.getDocument()).setDocumentFilter(new DocumentFilter() {
            @Override
            public void insertString(FilterBypass fb, int offset, String string, AttributeSet attr) throws BadLocationException {
                if (string.matches("\\d*")) { // Solo permitir dígitos
                    super.insertString(fb, offset, string, attr);
                }
            }

            @Override
            public void replace(FilterBypass fb, int offset, int length, String text, AttributeSet attrs) throws BadLocationException {
                if (text.matches("\\d*")) { // Solo permitir dígitos
                    super.replace(fb, offset, length, text, attrs);
                }
            }
        });
        // </editor-fold>
        AmountStatus.setText("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ReturnBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ReturnBtnMouseClicked
        ControlPanel controlPanel = new ControlPanel();
        controlPanel.setVisible(true);
        
        this.dispose();
    }//GEN-LAST:event_ReturnBtnMouseClicked

    private void AddMovementBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddMovementBtnMouseClicked
        try {
        String movementConcept = ConceptField.getText();
        String movementDescription = DescriptionTextArea.getText();
        String movementAmountText = AmountField.getText();
                String movementTime = "HH:MM:SS";

        
        // Verify user input
        
        if (movementConcept.isBlank() || movementConcept.isEmpty()) {
            throw new Exception("Concept can't be empty");
        }
        
        if (movementDescription.isBlank() || movementDescription.isEmpty()) {
            throw new Exception("Description can't be empty");
        }
        
        if (movementAmountText.isBlank() || movementAmountText.isEmpty()) {
            throw new Exception("Amount can't be empty");
        }        

        // Convert amount into double
        
        Double movementAmount = Double.valueOf(movementAmountText);
        
        if (AmountType.isSelected()) {
            movementAmount *= -1;
        }
        
        // Verify what time we should use
        
        if (!DefaultTimeChkBox.isSelected()) {
            // Usar la hora que emitió el usuario
        } else {
            // Usar la hora del equipo
            LocalTime localTime = LocalTime.now();
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("HH:mm:ss");
            movementTime = localTime.format(formatter);
        }

     
        Movement newMovement = new Movement(movementConcept, movementDescription, movementAmount, dateChooser.getDate(), movementTime,session.getBankingAccountSelected());
        
        if (JOptionPane.showConfirmDialog(this, "Is '" + movementConcept + "' movement information correct?", "Confirmation", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            newMovement.addMovementToDatabase();
            
            ControlPanel controlPanel = new ControlPanel();
            controlPanel.setVisible(true);
            
            this.dispose();
        }
        
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "An error has been throwed. " + e);
            System.err.println(e);
        }
    }//GEN-LAST:event_AddMovementBtnMouseClicked

    private void DefaultTimeChkBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_DefaultTimeChkBoxItemStateChanged
        if (!DefaultTimeChkBox.isSelected()) {
            System.out.println("Abrir selector de hora");
        } else {
            System.out.println("Establecer hora del equipo");
        }
    }//GEN-LAST:event_DefaultTimeChkBoxItemStateChanged

    private void AmountTypeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_AmountTypeItemStateChanged
        if (AmountType.isSelected()) {
            // Amount type is an expense
            AmountType.setText("Expense");
            setAmountStatus();
        } else {
            // Amount type is an income
            AmountType.setText("Income");
            setAmountStatus();
        }
    }//GEN-LAST:event_AmountTypeItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewMovement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewMovement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewMovement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewMovement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewMovement().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddMovementBtn;
    private javax.swing.JTextField AmountField;
    private javax.swing.JLabel AmountStatus;
    private javax.swing.JCheckBox AmountType;
    private javax.swing.JTextField ConceptField;
    private javax.swing.JPanel DateChooserPanel;
    private javax.swing.JCheckBox DefaultTimeChkBox;
    private javax.swing.JScrollPane DescriptionScroll;
    private javax.swing.JTextArea DescriptionTextArea;
    private javax.swing.JButton ReturnBtn;
    private javax.swing.JLabel SelectedBankingAccountLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables
}
